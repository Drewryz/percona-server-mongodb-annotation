Import("env")
Import("inmemory")

env = env.Clone()

if inmemory:
    imEnv = env.Clone()
    imEnv.InjectThirdPartyIncludePaths(libraries=['wiredtiger'])
    imEnv.InjectThirdPartyIncludePaths(libraries=['zlib'])
    imEnv.InjectThirdPartyIncludePaths(libraries=['valgrind'])

    imEnv.Library(
        target='storage_inmemory',
        source=[
            'inmemory_global_options.cpp',
            'inmemory_init.cpp',
            'inmemory_options_init.cpp',
            ],
        LIBDEPS=[
            '$BUILD_DIR/mongo/db/storage/wiredtiger/storage_wiredtiger_core',
            ],
        LIBDEPS_TAGS=[
            # Depends on symbols defined in serverOnlyfiles
            'incomplete',
        ],
        )

    imEnv.CppUnitTest(
        target='storage_inmemory_init_test',
        source=['inmemory_init_test.cpp',
                ],
        LIBDEPS=[
            '$BUILD_DIR/mongo/db/auth/authmocks',
            '$BUILD_DIR/mongo/db/serveronly',
            '$BUILD_DIR/mongo/db/service_context',
            '$BUILD_DIR/mongo/db/service_context_d',
            ],
        )

    imEnv.CppUnitTest(
        target='storage_inmemory_kv_engine_test',
        source=['inmemory_kv_engine_test.cpp',
                ],
        LIBDEPS=[
            '$BUILD_DIR/mongo/db/auth/authmocks',
            '$BUILD_DIR/mongo/db/storage/wiredtiger/storage_wiredtiger_mock',
            '$BUILD_DIR/mongo/db/storage/kv/kv_engine_test_harness',
            ],
            LIBDEPS_PRIVATE=[
                '$BUILD_DIR/mongo/db/repl/repl_coordinator_interface',
                '$BUILD_DIR/mongo/db/repl/replmocks',
            ],
        )
