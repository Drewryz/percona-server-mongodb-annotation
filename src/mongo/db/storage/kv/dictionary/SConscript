Import("env")

env.Library(
    target='kv_dictionary',
    source=[
        'kv_dictionary.cpp',
        'kv_dictionary_update.cpp',
        ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/db/storage/index_entry_comparison',
        ]
    )

env.Library(
    target='kv_engine_impl_core',
    source=[
        'kv_engine_impl.cpp',
        'kv_record_store.cpp',
        'kv_record_store_capped.cpp',
        'kv_size_storer.cpp',
        'kv_sorted_data_impl.cpp',
        ],
    LIBDEPS=[
        'kv_dictionary',
        '$BUILD_DIR/mongo/background_job',
        '$BUILD_DIR/mongo/db/storage/kv/kv_engine_core',
        '$BUILD_DIR/mongo/db/concurrency/write_conflict_exception',
        ]
    )

env.Library(
    target='kv_engine_impl',
    source=[
        'kv_size_storer_shutdown.cpp',
        ],
    LIBDEPS=[
        'kv_engine_impl_core',
        ]
    )

# To avoid linking with serveronly just to get OperationContextImpl, we
# mock out KVSizeStorer::saveOnShutdown with an empty implementation.
env.Library(
    target='kv_size_storer_shutdown_mock',
    source=[
        'kv_size_storer_shutdown_mock.cpp',
        ],
    LIBDEPS=[]
    )

env.Library(
    target='kv_dictionary_test_harness',
    source=[
        'kv_dictionary_test_harness.cpp',
        ],
    LIBDEPS=[
        'kv_dictionary',
        ]
    )
